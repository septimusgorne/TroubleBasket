using Interface_Example_1;
using System;

// Интерфейсы.Интерфейсы и полиморфизм
// интерфейсы можно сравнить с абстрактным классом у которого
// только абстрактные методы и нет никакой реализации

//Задачей интерфейса является определить контракт взаимодействия
// между классами

//С помощью интерфейса мы определяем поведение, которое в
// последствии будет реализовано в каком-то конкретном классе


//важное отличие интерфейса от абстрактного класса и классов вообще
//что он позволяет множественное наследование
// 1 класс может наследовать несколько интерфейсов и один
//интерфейс может наследоваться(реализует) от других интерфейсов
namespace Interface_Example
{

    class Program
    {
        public static void Main()
        {
            //IDataProvider dataProvider;
            //создаем переменную у которой тип данных
            //это тип интерфейса

            //ссылка интерфейса может хранить в себе объект
            // любого класса, который реализовывает данный
            //интерфейс

            IDataProcessor dataProcessor = new ConsoleDataProcessor();
            //Создаем объект типа IDataProcessor и
            //присваиваем ConsoleDateProcessor
            //т.е класс, который этот интерфейс и реализует
            dataProcessor.ProcessData(new DBDataProvider());
            dataProcessor.ProcessData(new FileDataProvider());
            dataProcessor.ProcessData(new APIDataProvider());
            //вот и суть полиморфизма



        }
    }
}